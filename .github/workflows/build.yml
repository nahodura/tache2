name: Build

on:
  push:
  pull_request_target:
    types: [labeled]

env:
  JAVA_DIST: 'zulu'
  JAVA_VERSION: 22

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Compile and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        jvm_flags:
          - "-XX:+UseG1GC -Xms512m -Xmx2g -XX:MaxGCPauseMillis=200 -XX:+HeapDumpOnOutOfMemoryError"
          - "-XX:+UseG1GC -Xms256m -Xmx1g -XX:+PrintGCDetails -XX:+UnlockDiagnosticVMOptions"
          - "-XX:+UseG1GC -Xms1g -Xmx1g -XX:+AlwaysPreTouch -XX:+ExitOnOutOfMemoryError"
          - "-XX:+UseZGC -Xms512m -Xmx2g -XX:+PrintGCDetails -XX:MaxGCPauseMillis=100"
          - "-XX:+UseZGC -Xms1g -Xmx1g -XX:+HeapDumpOnOutOfMemoryError -XX:+AlwaysPreTouch"
          - "-XX:+UseZGC -Xms256m -Xmx512m -XX:MaxGCPauseMillis=50 -XX:+ExitOnOutOfMemoryError"
          - "-XX:+UseG1GC -Xms1g -Xmx2g -XX:MaxGCPauseMillis=150 -XX:+HeapDumpOnOutOfMemoryError"
          - "-XX:+UseG1GC -Xms512m -Xmx1g -XX:+PrintGCDetails -XX:+AlwaysPreTouch"
          - "-XX:+UseZGC -Xms512m -Xmx1g -XX:+HeapDumpOnOutOfMemoryError -XX:+ExitOnOutOfMemoryError"
          - "-XX:+UseG1GC -Xms256m -Xmx512m -XX:+UnlockDiagnosticVMOptions -XX:+PrintGCDetails"

    steps:

      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DIST }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      #- name: Cache SonarCloud packages
      #  uses: actions/cache@v4
      #  with:
      #    path: ~/.sonar/cache
      #   key: ${{ runner.os }}-sonar
      #    restore-keys: ${{ runner.os }}-sonar

      - name: Build and Test
        run: >
          xvfb-run
          mvn -B verify -Djavafx.platform=linux
          jacoco:report
          -Pcoverage
        # org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
        # -Dsonar.projectKey=cryptomator_cryptomator \
        # -Dsonar.organization=cryptomator \
        # -Dsonar.host.url=https://sonarcloud.io

        env:
          MAVEN_OPTS: "${{ matrix.jvm_flags }}"  # Set JVM flags here directly in env
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          #SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Draft a release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          discussion_category_name: releases
          token: ${{ secrets.CRYPTOBOT_RELEASE_TOKEN }}
          generate_release_notes: true
          body: |-
            :construction: Work in Progress
            
            ‚è≥ Please be patient, the builds are still [running](https://github.com/cryptomator/cryptomator/actions). New versions of Cryptomator can be found here in a few moments. ‚è≥
            
            As usual, the GPG signatures can be checked using [our public key `5811 7AFA 1F85 B3EE C154  677D 615D 449F E6E6 A235`](https://gist.github.com/cryptobot/211111cf092037490275f39d408f461a).
            
            ---
            <!-- Don't forget to include the üíæ SHA-256 checksums of release artifacts: -->